name : Get PR Contents

on :
  pull_request : 
    branches : 
      - main
      - feature/*
    paths-ignore: 
      - '.github/**'
          
  workflow_dispatch : 
    inputs :
      logLevel : 
        description : Input Value at time the workflow is triggered
        default : warning
        type : choice 
        options : ['off', 'info', 'warning', 'error', 'crash']
  
jobs : 
  extractPRContents :
    outputs :
      createRelease : ${{ steps.runPWSH.outputs.createRelease }}
        
    runs-on : ubuntu-latest
    steps :
      - name : run composite action
        id : runCompositeAction
        uses : T4dP0les/consoleApp/actions/getChangedFiles@main



      - name : 'run powershell'
        id : runPWSH
        shell : pwsh
        run : |
          $eventName = "${{ github.event_name }}"
          write-host "Build trigger : $eventName"
          if ("$eventName" -eq "pull_request") {
            $createRelease = $true
            # write-host does not work as it seems to write directly to the console.
            # write-output works 
            write-output "createRelease=true" | out-file $env:GITHUB_OUTPUT -encoding utf8 -append
            #GITHUB_REF_NAME=12/merge
            #GITHUB_REPOSITORY=T4dP0les/consoleApp
            #GITHUB_API_URL=https://api.github.com
            $prID = ("${{ github.ref_name }}" -split('/'))[0]
            $uri = "{0}/repos/{1}/pulls/{2}/commits" -f "${{ github.api_url }}", "${{ github.repository }}", "$prID"
            write-host "URI $uri"
            $prCommits = invoke-restmethod -uri $uri -method 'GET'
            foreach($curCommit in $prCommits) {
              $commitContents = invoke-restmethod -uri $curCommit.url -method 'GET'
              foreach ($curFile in $commitContents.files) {
                write-host "Was Modified : " $curFile.filename
              }
            }
          } else {
            $createRelease = $false
          }


  release :
    needs : extractPRContents
    if : ${{ needs.extractPRContents.outputs.createRelease }}
    runs-on : ubuntu-latest
    steps : 
      - name : dump file vars
        shell : pwsh
        run : |
          get-content $env:GITHUB_ENV
    
      - name : get var from previous job
        shell : pwsh
        run : |
          write-host "${{ needs.extractPRContents.outputs.createRelease }}"
